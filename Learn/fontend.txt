-tao file index.html
-web sever: ưu tiên các file có tên là index
+cau truc html:
	+gom cac the <ten the> 
	+ Co 2 loai the
		+The mo <ten the>
		+The dong</ten the>
	+Xuong dong va dau cach tuong duong nhau
+cac loai html co ban
	+2 loai the
		+the noi dung:
			khi viet vao hien noi dung len trang web
			bao gom cac the:
				+ p
				+ h
				+ img
				+ a
				+ li
				+ input
				+ select
				+ button
		+the bao:
			dung de bao boc cac trang web
			bao gom cac the:
				+ div
				+ header
				+ footer
				+ sidebar
				+ span
				+ ul
				+ ol
+ p: paragraph : the van ban
+h: heading : h1 -> h6
+img: image : hinh anh ; khong co </..> vi la the don
	+src: source : nguon anh
+ a: the lien ket
	+ href: duong dan lien ket
+ ul: un-order list: danh sach khong sap xep; phai co <li> ben trong va se hien dau cham(.)
+ ol: order list: danh sach sap xep; co <li> ben trong va hien so 1, 2 , 3
+ li: list item: muc danh sach
*********
+ The dang FORM: the de nguoi dung go noi dung vao
	+ input: cho phep nguoi dung nhap du lieu
	+ cu phap <input type="noi dung" />
		+ text
		+ button
		+ password
		+ checkbox
		+ radio
	+ the select: cho phep tro xuong de chon
		+ option
	+ label: nhấn
+ The div: xac dinh 1 vung trang web va chi dung de khoanh vung
+ header:giong nhu div: xac dinh 1 vung tren web => phan dau cua trang web
+ footer: phan chan
+ sidebar:phan sidebar
+ span: dung de dinh dang mau :xet ve ngu nghia thi khong co tac dung trong cau van
+ the sup: dung de ghi so mu vd 3^2
+ br: break: the xuong dong
	+ <br/>

web developer tools

==============================
box model:
	+la mot mo hinh cua element: mo hinh hop
	+ Mo hinh hop
		+ tat ca cac thanh phan (element) tren trang web deu co mo hinh chung: hinh hop chu nhat
		+ cau tao hinh chu nhat
			+ margin: la khoang cach voi cac element xung quanh
				+ margin-left
				+ margin-right
				+ margin-top
				+ margin-bottom
			+ border: duong vien cua element
				+ border-left
				+ border-right
				+ border-top
				+ border-bottom
			+ padding: la khoang cach giua cac duong vien voi cac thanh phan con ben trong
				+ padding-left
				+ padding-right
				+ padding-top
				+ padding-bottom
			+ width: chieu rong
			+ height: chieu cao

+ Mac dinh: khoang khong gian chiem cho cua element = tong margin + border + padding + width

+ selector: cach de css chon ra mot hoac nhieu element
	+ chon theo the
		+ ten the <dau cach> {...}
	+ chon theo id: 
		+ id (indetifier) la mot thuoc tinh cua bat ki mot the nao
		+ dinh nghia bang dau #
		+ id chi co mot khong duoc dat chung voi bat ki cai gi khac
	+ chon theo class:
		+ cung giong nhu id
		+ class: dung cho nhieu cai (Khác với id dùng cho 1 cái)
		+ dung dau cham (.)
	+ chon thanh phan nằm trong: dung dau cach 
		+ VD: #menu li {...} truy cap cac thanh phan con trong the <li>
	+ chon thanh phan con truc tiep: su dung dau " > "
	+ chon theo nhieu dieu kien: viet cac dieu kien gan nhau
	+ chon nhieu element: dung dau phay:
		+ vd: li, p {   }
	+ chon theo thu tu:
		+ first-child: thanh phan dau tien
		+ last-child: thanh phan cuoi cung
		+ nth-child: thanh phan so may? 
		+ odd: so chan
		+ even: so le
		+ su dung tham so n (n tang dan tu 0 cho den vo cung)
	+ chon theo thuoc tinh
		+ su dung dau [thuoc tinh=gia tri]
		+ vd: [type=text] {  }
	+ chon mot thanh phan tiep theo: dung dau: + va tiep sau do la selector
	+ chon nhieu thanh phan tiep theo (tat ca cac thanh phan phia sau): dung dau ~ và tiep sau do la selector
	+ wildcat selector: *: tat ca
	+ :not(): khong phai

================================
5 thuoc tinh quan trong nhat cua css
+ la thuoc tinh anh huong den kich thuoc cua element
+ width: chieu rong cua element
	+ gia tri px
	+ gia tri % cua element cha
		+ position: fixed => % cua body
+ height: chieu cao cua element
	+ tu dong dai ra theo noi dung ben trong
	+ gia tri px hoac %
+ padding: padding cua element
	+ khoang cach giua duong vien den noi dung
	+ gia tri: px, %
	+ padding-left
	+ padding-right
	+ padding-top
	+ padding-bottom
	+ chi viet: padding
		+ 1 gia tri: tren, duoi, trai, phai
		+ 2 gia tri: vd như 30px, 15px nghia la tren duoi 30 va trai phai 15
		+ 4 gia tri: tren, phai, duoi, trai
+ border: duong vien
	+ cach viet tat:
		border: [do day] [kieu] [mau]
		+ kieu:
			+ solid: net lien
			+ dotted: net cham cham
			+ dashed: net gach
		+ border-left: [do day] [kieu] [mau]
		+ border-right: [do day] [kieu] [mau]
		+ border-top: [do day] [kieu] [mau]
		+ border-bottom: [do day] [kieu] [mau]
	+ border-width: [do day]
		+border-left-width: do day duong vien trai
		+border-right-width: do day duong vien phai
		+ border-top-width: do day duong vien tren
		+border-bottom-width: do day duong vien duoi
	+ border-style: kieu duong vien
		+ border-left-style: kieu duong vien trai
		+ border-right-style: kieu duong vien phai
		+ border-top-style: kieu duong vien tren
		+ border-bottom-style: kieu duong vien duoi
	+ border-color: mau duong vien
		+ border-left-color: mau duong vien ben trai
		+ border-right-color: mau duong vien phai
		+ border-top-color: mau duong vien tren
		+ border-bottom-color: mau duong vien duoi

	+ border-darius: bo góc của ô vuông lại
+ margin: la khoang cach voi cac thanh phan xung quanh
	+ giong padding
+ box-sizzing: quy dinh cach ma trinh duyet tinh toan kich thuoc cua element
	+ mac dinh: 
		content-box => rong = border + padding + width
		border-box => rong - width
+ margin, padding, width, height, box-sizzing, border
+ block va inline:
	+ tat ca cac the html chia thanh 2 loai
		+ block element
			+ la element mac dinh rong 100%
			+ nam tren mot hang rieng
			+ block element dung de chua cac block hoac inline element khac
			+div, h1-6, ul, ol, li, header, footer, sidebar, p
			+ co the xac dinh width va height cho no
		+ inline element
			+ la element mac dinh rong bang noi dung
			+ nam tren cung mot hang
			+ chi chua duoc inline element 
			+ a, span, label, input, button, select
			+ rieng the img: co trinh duyet hieu la block va co trinh duyet hieu la inline
			+ khong the xac dinh width va height
+ thuoc tinh display:
	+ block
	+ inline
	+ inline-block:  hien thi 1 dong nhu inline, nhung co the dat width va height cho no


HTML Table

+ td table data
+ tr table row
+ th table heading

form :
+ placeholder

inline 
internal
external



** Float-clear

+ tat ca cac thanh phan trong trang web deu co xu huong chay len phia tren, neu la thanh phan inline: chay sang ben trai

Float:
	+ la mot thuoc tinh dinh nghia cho element troi ve phia nao
	+ Khi float: lam the nao de khong bi xuong dong
		+ đặt %
		+ su dung fix 1 ben

basic layout:
	+ 2 cột
	+ 3 cột

Clear:
	Xoa su anh hưởng của float của thành phần phía trước
	+ left
	+ right
	+ both: cả 2

+ khi 1 thanh phan con mà float => thành phần cha không thẻ tính toán được chiều cao

+ reset css: 
	mỗi trình duyệt có thuộc tính mặc định khác nhau

+ Flex: flex box
+ Khong chac chan chay duoc tren 100% trinh duyet
+ Flex la mo hinh dan trang pho bien tren mobile app, android, ios
+ js, vue(react) => react native(mobile)

+ de su dung flex: display: flex cho thanh phan cha
+ flex-grow: 
	+ dinh nghia viec lon len cua flex item
	+ la ti le phân chia phần thừa còn lại của cha 
	+ theo truc main

+ flex-shrink:
	+ nguoc lại với flex grow
	+ la ti le phan chia phan thieu 
	+ theo truc main
	+ vd: tỷ lệ 1 4 1 mà width tổng = 500 thì khi bị co lại cũng sẽ bị co theo tỉ lệ 1 4 1

+ justtify-content 
	+ Sap xep cac item theo truc main (trục ngang)
	+ flex-start
	+ flex-end
	+ center
	+ space-beetween
	+ space-around

+ align-items
	+ sap xep cac item theo truc cross (trục dọc)
	+ flex-start
	+ flex-end
	+ center

+ flex-basis:
	+ la kich thuoc cua item theo truc main
	+ la width khi truc main nam ngang
	+ la height khi truc main nam doc

+ flex-wrap: tự động chia sao cho vừa chiều cao hoặc chiều rộng

+ font: 
	+ Hieu ve font chu
	+ font chu: la mot bo hinh anh cac chu cai
	+ go chu tren may tinh: xep cac hinh anh ke nhau
	+ window: C:/windows/fonts
	+ linux: /usr/share/fonts
	+ duoi: file font:ttf, eof
	+ font-size: 
	+ line: dòng chữ xếp sát nhau
	+ line-height: do cao cua dong chu, cac chu cai thi duoc can vao giua dong theo chieu doc
	+ tao cac menu: the a: line height = height
	+ Trick:
		+ Khi dat height = line-height thi text se can giua theo chieu doc
	+ letter-spacing: khoang cach giua cac chu cai
	+ word-spacing: khong cach giữa các từ
	+ word-break: gồm 2 thuộc tính là
		+ break-all: cắt xuống dòng 
		+ keep-all: không xuống dòng mà kéo dài ra

	+ font-family: địh nghĩa các font
		+ dau phân cách các font bằng dấu ngoặc kép
		+ các ten font co dau cach: Nháy
		+ sans-serif: font mặc định (nếu các font trước không có thì sẽ lấy font sans-serif)
		+ @font-face: định nghĩa ra 1 font
	+ có 2 loại font
		+ font có sẵn: font có sẵn trên máy người dùng
			+ không phải tải thêm
			+ tốc độ nhanh
			+ nhuoc diểm: trên máy người dùng chưa chắc có font sans-serif
		+ web font:
			+ la những font nhúng ở trên trang web, khi người dùng xem trang web thì trang web sẽ tải về
		
		+ icon font:
** Khi nào danh sách hoặc menu thì cho vào list(đánh số hoặc đánh dấu được)


+ position: chi định vị trí của các element
	+ fixed: nằm chính xác tuyệt đối với body
		+ phải đặt vị trí top và left, right, bottom cho nó
		+ nằm lên phía trên của các element khác
		+ chiều rộng của element phụ thuộc vào nội dung bên trong của element đó

	+ sticky: nằm bình thường với các element khác, nếu scroll chuột lên thì nó sẽ không thể cuộn được nữa
	+ Mặc định: static
	+ relative: 
		+ vị trí liên quan
	+ absolute: 
		+ vị trí tuyệt đối so với thành phần chứa nó có position là relative
	+ cap relative + absolute

+ background:
	+ nen
	+ background-color: mau nen
	+ background-imge: url() hinh nen
	+ background-repeat: lap lai
		+ no-repeat: Khong lap
		+ repeat: lap
		+ repeat-x: lap ngang
		+ repeat-y: lap doc
	+ background-position:
		+ vi tri cua hinh nen
		+ left px top px 
		+ left/right/center top/bottom/center
	+ background-size: 
		+ kích thước của ảnh nền
		+ cover: zoom cho vừa đủ 2 chiều của element
		+ contain: zoom sao cho full 1 chiều của element
		+ auto: mặc định
		+ kích thước rộng - kích thước cao
	+ background-attachment:
		+ fixed: khi element scroll => đứng im theo body
		+ scroll: khi element scroll => kéo theo body
		+ local: scroll theo element hiện tại
	+ cách viết tắt:
		+ background: [mau]->[anh nen]->repeat->position

+ State:
	+ Cac element tren trang web dev co state
		+ hover: khi nguoi dung di chuyen chuot len element thi se doi mau theo hover
		+ active: hien thi mau khi nhan chuot vao
		+ visited: link ban da xem(the a)
		+ link: trang thai ban dau(the a)
		+ focus: element hien tai

+ Dropdown menu (Dạng di chuyển chuột tới sẽ hiện ra menu)
	+ cap the huyen thoai: relative + absolute

+ Pseudo-element:
	+ cung la element nhu cac the khac
	+ Do css them vao
	+ co 2 pseudo 
		+ before
		+ after

+ float + clear: 
	+ clear-fix: 

:nbsb: kí tự đặc biệt cho phép gõ khoảng trắng phía trước

+text-align: anh huong toi text va tat ca cac inline element tren trang web
	+ right: đưa văn bản về phải
	+ left: đưa văn bản về trái
	+ justify: đưa văn bản đều 2 bên
+ text-decoration:
	+ none: bỏ gạch chân
	+ line=through: gạch ngang chữ
	+ underline: gạch dưới
+ text-indent: canh lề cho đoạn văn (ẩn hoặc cách lề)
+overflow: nội dung bên trong bị tràn ra ngoài
	+ scroll: phần tràn được cắt vớt và thêm thanh cuộn
	+ visible: mặc định và nội dung sẽ tràn ra ngoài
	+ hidden: phần tràn sẽ bị cắt và nội dung bị ẩn đi
	+ auto: tự động thêm thanh cuộn khi có nội dung tràn
	+ overflow-x: tràn theo trục x là chiều ngang
	+ overflow-y: tràn theo trục y là chiều cao

+ opacity: độ trong suốt của màn hình
	+ giá trị từ 0-1
	+ làm mờ từ background và cả text

+ color: màu chữ
	+ màu trong web:
		+ tiếng anh: red, green, blue...
	+ mã màu RGB(red, green, blue): #6 chữ số hoặc chữ cái
	+ mau RGBA(red, green, blue, anpha(màu trong suốt)):

+ list-style: kiểu của list
+ boder-collapse: collapse -> gop het boder + margin cua cac cot va hang lai voi nhau

+ shadow:
	+ box-shadow: bong do cua box
	+ text-shadow: bong do cua text 
		+ []px [px] [px] mau: trai/phai, tren/duoi, độ mờ, màu sắc
	
switch box: dung nhung element co ban de tao ra

+ media query: 
	- css selector theo thiet bi
	+ thiết kế web reponsive
	+ break point (điểm phá vỡ)

	+ man hinh > 1500px
	+ man hinh rat lon > 1200px
	+ man hinh desktop: 960px
	+ man hinh medium mobile: 786px
	+ man hinh rat nho: < 500px

co 2 cach viet:
	+ tang dang - mobile first

@media [loai man hinh]

+ hinh anh tren trang web

*** responsive:
+ bản thiết kế
	+ desktop
	+ tablet
	+ mobile

**** javascript
	-console.log(thong_tin);

- javascript hoạt động thế nào?
	+ js engine
	+ đối tượng window: 
		+tất cả mọi code js nằm trong đối tượng window
	+ đối tượng document:
		+ nằm trong window
		+ là đối tượng đại diện cho tài liệu html hiện tại
	+ biến: 
		+ là 1 vùng bộ nhớ để lưu trữ dữ liệu, biến thì có tên
		+ cách khai báo biến: 
			+ var [tên biến] = [giá trị của biến];
			+ let [tên biến] = [giá trị của biến]; (es6)


+ Mỗi thẻ html = 1 biến ở bên dưới Js
+ viết html => tạo ra các biến
+ viết css: thay đổi thuộc tính của các biến	

các kiểu của biến
	+ chuỗi: String: là một tập hợp các kí tự trong ngoặc
	+ number

+ hiện kiểu sử dụng typeof


Cách thao tác với biến trong js:
	+ các thao tác xử lý chuỗi
		+ lấy ra số lượng kí tự: .length
		+ nối chuỗi: sử dụng toán tử +
		+ viết hoa: toUpperCase()
		+ viết thường: toLowerCase()
		+ Hàm cắt chuỗi: substring(start, end)
		+ hàm cắt chuỗi theo vị trí và chiều dài: substr(start, length
		+ hàm cắt 
		+ thay thế chuỗi: replace(chuỗi thay, chuỗi cần thay)
		+ hàm phân tách chuỗi: split(" ")
		+ hàm xóa khoảng trống 2 bên: trim()
		+ tìm vị trí của phần tử: indexOf()
		+ tìm vị trí cuối cùng: lastIndexOf()
		+ lấy kí tự tại vị trí thứ?: charAt()

+ các thao tác xử lý với number: 
	+ cộng, trừ, nhân, chia

+ hàm trong js: 
	function()
	+ hàm là 1 đoạn code, thực hiện 1 công việc nào đó
	+ hàm có thể gọi nhiều lần
	+ hàm có thể nhận các tham số(biến đầu vào)
		+ vd: function(name, age) {}
	
	+ tham số mặc điịnh: 
		+ không phải trình duyệt nào cũng nhận
	+ trả về return: 
		+ chương trình sẽ trả về giá trị ngay và luôn
	+ hàm mũi tên(arrow function):
		+ nếu chỉ có 1 tham số: không cần dấu ngoặc tròn
	 	+ không hỗ trợ các trình duyệt cũ

+ các thao tác với array:
	+ sort()
	+ reverse()
 	+ reduce()
 	+ map()
 	+ forEach()
  	+ every()
  	+ fileter()

Js ARRAY
	+ lay ra 1 phan tu cua array: a[index]
	+ lay ra so phan tu cua array: length
	+ Xoa phan tu cuoi cung: pop()
		+ la ham tra ve phan tu cuoi cung:
			+ vd: a = a1.pop() (ở đây a lấy giá trị cuối cùng của a1)
	+ xoa phan tu o dau mang: shift()
	+ Đẩy phân tử vao cuoi mang: push()
		+ a = a1.push(): trả về số lượng phần tử của mảng
	+ them 1 phan tu vao dau mang: unshift()
	+ xoa phan tu trong mang: splice()
		+ splice(vi_tri, so_luong_xoa)
	+ join(): cong cac phan tu lai
			+ join(ky_ty)
	+ sap xep: sort()
	+ ham dao nguoc: reverse()

+ foreach(function): lap qua tat ca cac phan tu cua mang
	+ khong tra ve

+ map: ban do
	+ sao chep cua thuc te + xu ly them tu nguoi dung
	+ cu phap: var [bien] = array.map(function(){ xu_ly => return;});

+ filter(): sao chep co chon loc
	+ cach chon: neu tra ve true: thi chon
	+ neu tra ve false thi khong chon

+ reduce(function(), start_value): 
	+ Nhận vào 1 mảng và tính toán thành giá trị duy nhất
	+ 


+ every(): kiểm tra toàn bộ mảng và trả về true/false
	+ true: khi tất cả đều true
	+ false: khi 1 trong các phần tử false

+ loop và DOM: 

+ js DOM:
	+ DOM: document object model
		+ tat ca moi thu trong html, css => deu la cac object javascript

+ Các phương thức và thuộc tính:
	+ doi tượng document:
		+ bắt đầu bằng document.(method or thuộc tính)
		+ Phương thức (method, hàm, function)
			+ Method: tìm 1 phần tử html
				+ document.getElementById(): Lấy 1 thẻ html có sẵn vào 1 biến
				+ document.getElementsByClassName(): lấy 1 phần tử bởi lớp
				+ document.getElementsByTagName():  lấy 1 phần tử bở thẻ

			+ Property: thay đổi phần tử
				+	element.style.property
				+ element.innerHTML
				+ element.attibute
			+ method: thay đổi
				+ element.setAttribute(attribute, value): thay đổi thuộc tính giá trị của 1 phần tử HTMl
			+ thêm và xóa phần tử: (document.method)
				+ createElement(element): tạo 1 phần tử html
				+ removeChild(element): xóa 1 phần tử html
				+ appendChild(element): thêm 1 phần tử html
				+ replacechild(new, old): thay thế 1 phần tử html
				+ write(text): ghi vào luồng đầu ra html

			+ add event
				+ getElementById(id).onclick: thêm 1 sự kiện khi bấm click

			+ querySelector(): dùng css để tìm, chỉ trả về 1 phan tu con dau tien
			+ querySelectorAll(): Dùng css để tìm, trả về được nhiều phan tu con ben trong

			+ Thuộc tính;
				+ innerHTML: nội dung bên trong của 1 thẻ
				style
+ event:
	+ tat ca cac element tren html deu co cac event: 
		+ click: xay ra su kien khi nguoi dung click
		+ onmousedown: su kien xay ra khi nguoi dung nhan click chuot
		+ onmouseup: khi nguoi dung bo click chuot thi se chay den ban dau
		+ onmouseover: kich hoat chuc nang khi nguoi dung di chuyen qua
		+ onmouseout: kich hoat 1 chuc nang khi nguoi dung khong di chuyen qua

	+ addEventListener(): thêm trình xử lý sự kiện khi người dùng nhấp vào nút
	+ removeEventListener(): loại bỏ trình nghe sự kiện addEven
		+ cú pháp: element.addEventListener()


***** lập trình hướng đối tượng:
	+ đối tượng (Object): là bất kì một đối tượng, một thực thể trong cuộc sống
	+ class (lớp): định nghĩa
		+ bên trong: 
			+ function, method,...
			+ biến: property: thuộc tính
			+ constructor: 
				+hàm khởi tạo và luôn chạy trước tất cả các hàm khác
				+ các tham số của constructor luôn khởi tạo khi một đối tượng được tạo ra
				+ chạy các hàm khỏi tạo
				+ là nơi chứa các property
	+ instance: thực thể: là 1 thể hiện của class
		+ tao instance bang tu khóa new
		+ một class có thể tạo nhiều instace

	+ singleton trong js:
		+ không có constructor()
		+ vd: var meo = {} la 1 singleton

	+ tất cả mọi thứ trong js đều là object
		+ function là 1 object
		+ array là 1 object
		+ string là 1 object
	+ this:
		+ là object hiện tại
		+ chỉ được viết ở trong đối tượng
	+ kế thừa:
		+ class con kế thừa từ class cha
		+ class con có hết thuộc tính và phương thức của class cha
		+ super(): gọi constructor của class cha
	+ riêng trong js:
		+ prototype: 
			+ là một thuộc tính
			+ có tên là __proto__
			+ chứa các hàm có sẵn của js
			+ giấu các hàm có sẵn tránh bị thay đổi
			+ các hàm có sẵn phụ thuộc vào kiểu của biến
	+ lập trình hướng đối tượng:
		+ không phụ thuộc ngôn ngữ nào
		+ 
			
*** callback, promise:
+ xu ly dong bo:
	+ Dong bo
		+ code chay tu tren xuong duoi
	+ Bất đồng bộ
		+ chạy đến dòng 3 => cho load ảnh xuong
		+ chay dong 4

Callback:
	+ callback hell: dia nguc callback
		=> promise: loi hua
			+ la 1 object co san trong js
		=> chuyen de xu ly bat dong bo:
		=> co 2 tham so constructor: resolve va reject
	+ .them(function(){

	})
		+ chinh la resolve
	+ .catch(function() {})
		+ chinh la reject
+ promise.all()
	=> resolve khi toàn bộ các promise con resolve
	+ thành công khi toàn bộ promise con thành công
	+ không đảm bảo thứ tự

+ promise.any():
	+ thành công khi có ít nhất 1 promise con thành công
	+ nhận vào một mảng

async và await:
	+ 